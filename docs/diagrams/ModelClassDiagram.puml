@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor MODEL_COLOR
skinparam classBackgroundColor MODEL_COLOR

Package Model as ModelPackage <<Rectangle>>{
  Class "<<interface>>\nReadOnlyAddressBook" as ReadOnlyAddressBook
  Class "<<interface>>\nReadOnlyUserPrefs" as ReadOnlyUserPrefs
  Class "<<interface>>\nModel" as Model
  Class AddressBook
  Class ModelManager
  Class UserPrefs
  Class AliasBook

  Class UniquePersonList
  Class UniqueEventList
  Class Person
  Class Event
  Class Year
  Class Email
  Class Name
  Class Phone
  Class Role
  Class EventName
  Class Date
  Class Venue
  Class Alias

  Class I #FFFFFF
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Model

AddressBook .up.|> ReadOnlyAddressBook

ModelManager .up.|> Model
Model .right.> ReadOnlyUserPrefs
Model .left.> ReadOnlyAddressBook
ModelManager -left-> "1" AddressBook
ModelManager -right-> "1" UserPrefs
ModelManager -down-> "1" AliasBook
UserPrefs .up.|> ReadOnlyUserPrefs

AddressBook *--> "1" UniquePersonList
AddressBook *--> "1" UniqueEventList
AliasBook *--> "*" Alias
UniquePersonList --> "~* all" Person
UniqueEventList --> "~* filtered" Event

Person *--> Name
Person *--> Phone
Person *--> Email
Person *--> Year
Person *--> "*" Role

Event *--> EventName
Event *--> Date
Event *--> Venue

Person -[hidden]up--> I
UniquePersonList -[hidden]right-> I
UniqueEventList -[hidden]left-> I

Name -[hidden]right-> Phone
Phone -[hidden]right-> Year
Year -[hidden]right-> Email
Email -[hidden]right-> EventName
EventName -[hidden]right-> Date
Date -[hidden]right-> Venue

ModelManager --> "~* all" Event
ModelManager --> "~* filtered" Person
ModelManager --> "~* all" Alias
@enduml

'@startuml
'!include style.puml
'skinparam arrowThickness 1.1
'skinparam arrowColor MODEL_COLOR
'skinparam classBackgroundColor MODEL_COLOR
'
'Package Model as ModelPackage <<Rectangle>>{
'  Class "<<interface>>\nReadOnlyAddressBook" as ReadOnlyAddressBook
'  Class "<<interface>>\nReadOnlyUserPrefs" as ReadOnlyUserPrefs
'  Class "<<interface>>\nModel" as Model
'  Class AddressBook
'  Class ModelManager
'  Class UserPrefs
'
'  Class UniquePersonList
'  Class UniqueEventList
'  Class Person
'  Class Event
'  Class Year
'  Class Email
'  Class Name
'  Class Phone
'  Class Role
'  Class EventName
'  Class Date
'  Class Venue
'
'  ' Newly added Alias-related classes
'  Package alias <<Folder>> {
'    Class Alias
'    Class AliasBook
'  }
'
'  Class I #FFFFFF
'}
'
'Class HiddenOutside #FFFFFF
'HiddenOutside ..> Model
'
'AddressBook .up.|> ReadOnlyAddressBook
'ModelManager .up.|> Model
'Model .right.> ReadOnlyUserPrefs
'Model .left.> ReadOnlyAddressBook
'
'ModelManager -left-> "1" AddressBook
'ModelManager -right-> "1" UserPrefs
'UserPrefs .up.|> ReadOnlyUserPrefs
'
'' === Alias relationships ===
'ModelManager -down-> "1" AliasBook
'AliasBook --> "* Alias"
'
'' === AddressBook and event/person relationships ===
'AddressBook *--> "1" UniquePersonList
'AddressBook *--> "1" UniqueEventList
'UniquePersonList --> "~* all" Person
'UniqueEventList --> "~* filtered" Event
'
'Person *--> Name
'Person *--> Phone
'Person *--> Email
'Person *--> Year
'Person *--> "*" Role
'
'Event *--> EventName
'Event *--> Date
'Event *--> Venue
'
'Person -[hidden]up--> I
'UniquePersonList -[hidden]right-> I
'UniqueEventList -[hidden]left-> I
'
'Name -[hidden]right-> Phone
'Phone -[hidden]right-> Year
'Year -[hidden]right-> Email
'Email -[hidden]right-> EventName
'EventName -[hidden]right-> Date
'Date -[hidden]right-> Venue
'
'ModelManager --> "~* all" Event
'ModelManager --> "~* filtered" Person
'@enduml
